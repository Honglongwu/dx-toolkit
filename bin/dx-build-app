#!/usr/bin/env python

import logging
logging.basicConfig(level=logging.DEBUG)
logging.getLogger('requests.packages.urllib3.connectionpool').setLevel(logging.ERROR)

import os, sys, json, fileinput, re, subprocess
from datetime import datetime
from optparse import OptionParser
import dxpy, dxpy.app_builder

parser = OptionParser(usage="%prog [options] applet_dir", description="Upload a DNAnexus applet.")
parser.add_option("-f", "--overwrite", help="Remove existing applets of the same name", action='store_true', default=False)
parser.add_option("-a", "--create_app", help="Create an app from the applet (requires dxapp.json to be present)", action='store_true', default=False)
parser.add_option("-p", "--destination_project", help="Insert the applet into the project with the specified project ID.", default=None)
parser.add_option("--publish", help="Publish the app after it has been created.", action='store_true', default=False)
parser.add_option("-b", "--bill-to", help="Owner (username or organization) to bill for the app.", default=None)
(opts, args) = parser.parse_args()

def get_timestamp_version_suffix():
    return "+build." + datetime.today().strftime('%Y%m%d.%H%M')

def get_version_suffix(src_dir):
    # If anything goes wrong, fall back to the date-based suffix.
    try:
        if os.path.exists(os.path.join(src_dir, ".git")):
            abbrev_sha1 = subprocess.check_output(['git', 'rev-parse', 'HEAD'], cwd=src_dir).strip()[:7]
            return "+git." + abbrev_sha1
    except:
        pass
    return get_timestamp_version_suffix()

if len(args) != 1:
    parser.print_help()
    parser.error("Incorrect number of arguments")

src_dir = args[0]

if not os.path.isdir(src_dir):
    parser.error("%s is not a directory" % src_dir)

if not os.path.exists(os.path.join(src_dir, "dxapp.json")):
    parser.error("Directory %s does not contain dxapp.json: not a valid DNAnexus applet source directory" % src_dir)

if opts.create_app and not os.path.exists(os.path.join(src_dir, "dxapp.json")):
    parser.error("Directory %s does not contain dxapp.json: not a valid DNAnexus app source directory" % src_dir)

dxpy.app_builder.build(src_dir)
bundled_resources = dxpy.app_builder.upload_resources(src_dir)

applet_id = dxpy.app_builder.upload_applet(src_dir, bundled_resources, overwrite=opts.overwrite, project=opts.destination_project)

print >> sys.stderr, "Created applet " + applet_id + " successfully"

if opts.create_app:

    with open(os.path.join(src_dir, "dxapp.json")) as app_desc:
        app_json = json.load(app_desc)
    version = app_json['version']
    try_versions = [version, version + get_version_suffix(src_dir)]

    app_id = dxpy.app_builder.create_app(applet_id, src_dir, publish=opts.publish, set_default=opts.publish, billTo=opts.bill_to, try_versions=try_versions)
    print >> sys.stderr, "Created app " + app_id + " successfully"
    print json.dumps(dxpy.api.appDescribe(app_id))
else:
    print json.dumps(dxpy.api.appletDescribe(applet_id))

#print json.dumps(dxpy.api.appletGet(applet_id))
